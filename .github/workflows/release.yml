name: Build and Release

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18"

            - name: Install dependencies
              run: yarn install

            - name: Build the code
              run: yarn build

            - name: Archive build
              run: |
                  zip -r Lecture-Master.zip build/
              working-directory: ${{ github.workspace }}

            - name: Upload build artifact
              id: upload-build-artifact
              uses: actions/upload-artifact@v3
              with:
                  name: Lecture-Master-build-${{ steps.read_version.outputs.version }}
                  path: Lecture-Master.zip

    release:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18"

            - name: Read VERSION.md
              id: read_version
              run: |
                  VERSION_CONTENT=$(cat VERSION.md)
                  VERSION=$(echo "$VERSION_CONTENT" | grep -oP '(?<=Version )\d+\.\d+')
                  DESCRIPTION=$(echo "$VERSION_CONTENT" | grep -oP '(?<=Description: ).*')
                  echo "::set-output name=version::$VERSION"
                  echo "::set-output name=description::$DESCRIPTION"
              shell: bash

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ steps.read_version.outputs.version }}
                  release_name: v${{ steps.read_version.outputs.version }}
                  body: |
                      ${{ steps.read_version.outputs.description }}

                  draft: false
                  prerelease: false

            - name: Upload release assets
              id: upload-release-assets
              uses: actions/upload-artifact@v3
              with:
                  name: Lecture-Master-release-${{ steps.read_version.outputs.version }}
                  path: Lecture-Master.zip
